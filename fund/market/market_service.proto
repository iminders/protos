syntax = "proto3";

package market;

option go_package = "github.com/iminders/protos/fund/market/market_service_proto";

message Market {
  DayDuration day_duration = 1;
  repeated string open_days = 2;
  repeated StockBasic stock_basics = 3;
}

service MarketService {
  // Sends a greeting
  rpc SayHello (string) returns (string) {}
  // Buy or sell securities
  // rpc Bid(BidRequest) returns (BidResponse){};
  // // Update market start date and end date
  // rpc Update(DayDuration) returns (Status);
  // // Get open days list of stock market order by time
  // rpc GetOpenDays(DayDuration) returns(GetOpenDaysResponse);
  // // Add a stock record
  // rpc AddRecord(AddRecordRequest) returns(Status);
  // // Delete record by code, duration
  // rpc DeleteRecord(DeleteRecordRequest) returns(Status);
  // // Delete record by duration
  // rpc DeleteDurationRecord(DeleteDurationRecordRequest) returns(Status);
  // // Delete record by code
  // rpc DeleteCodeRecord(DeleteCodeRecordRequest) returns(Status);
  // // Delete all record
  // rpc DeleteAllRecord(DeleteAllRecordRequest) returns(Status);
}

enum BidType {
  SELL = 0;
  BUY = 1;
}

enum Code {
  OK = 0;
  ERROR = 1;
}

message Status {
  Code code = 1;
  string service = 2;
  string description = 3;
}

message Bid {
  string code = 1;
  int64 volume = 2;
  double price = 3;
  BidType bid_type = 4;
}

message BidRequest {
  string request_id = 1;
  Bid bid = 2;
}

message BidResponse {
  bool success = 1;
  int64 volume = 2;
  double price = 3;
  double amount = 4;
}

message DayDuration {
  // date format: YYYY-mm-dd
  string start_date = 1;
  string end_date = 2;
}

message GetOpenDaysResponse {
  repeated string dates = 1;
}

message AddRecordRequest {
  string request_id = 1;
  string code = 2;
  string date = 3;
  BasicIndex basic_index = 4;
}

message DeleteRecordRequest {
  string request_id = 1;
  string code = 2;
  DayDuration day_duration = 3;
}

message DeleteDurationRecordRequest {
  string request_id = 1;
  DayDuration day_duration = 2;
}

message DeleteCodeRecordRequest {
  string request_id = 1;
  string code = 2;
}

message DeleteAllRecordRequest {
  string request_id = 1;
}


message StockBasic {
  string code = 1; // 代码
  string name = 2; // 名称
  string industry = 3; // 所属行业
  string area = 4; // 地区
  double pe = 5;// 市盈率
  double outstanding = 6;// 流通股本(亿)
  double totals = 7;// 总股本(亿)
  double total_assets = 8; // 总资产(万)
  double liquid_assets = 9;// 流动资产
  double fixed_assets = 10;// 固定资产
  double reserved = 11; // 公积金
  double reserved_per_share = 12; // 每股公积金
  double esp = 13; // 每股收益
  double bvps = 14; // 每股净资
  double pb= 15; // 市净率
  double time_to_market = 16;// 上市日期
  double undp = 17; // 未分利润
  double perundp = 18; //  每股未分配
  double rev = 19; // 收入同比(%)
  double profit = 20; // 利润同比(%)
  double gpr= 21;// 毛利率(%)
  double npr = 22; // 净利润率(%)
  int32 holders = 23;// 股东人数
}

message BasicIndex {
  double open = 1; // 开盘价
  double high = 2;// 最高价
  double close = 3;// 收盘价
  double low = 4;// 最低价
  double volume = 5;// 成交量
  double price_change = 6;// 价格变动
  double p_change = 7; // 涨跌幅
  double ma5 = 8; // 5日均价
  double ma10 = 9; // 10日均价
  double ma20 = 10; // 20日均价
  double v_ma5 = 11; // 5日均量
  double v_ma10 = 12; // 10日均量
  double v_ma20 = 13; // 20日均量
  double turnover = 14; // 换手率[注:指数无此项]
}

// 市场一个交易日的基本记录
message MarketDayRecord {
  // key: code
  map<string, BasicIndex> basic_indexs = 1;
}

// 市场所有交易日的基本记录
message MarketRecords {
  // key: date
  map<string, MarketDayRecord> market_recodes= 1;
}
